name: Sopkathon CI/CD

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
    types: [ opened, synchronize, reopened ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle caching
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*gradle*','**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # gradle 빌드
      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      # 도커 이미지 생성 후 이미지 push
      - name: Docker build & push to dev
        run: |
          docker login -u ${{ secrets.DOCKER_USER_NAME }} -p ${{ secrets.DOCKER_USER_TOKEN }}
          docker build -f Dockerfile-dev -t ${{ secrets.DOCKER_USER_NAME }}/sopkathon  .
          docker push ${{ secrets.DOCKER_USER_NAME }}/sopkathon

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_SECRET_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SECRET_PEM }}
          envs: GITHUB_SHA
          script: |
            sudo docker rm -f app || true
            
            sudo docker pull ${{ secrets.DOCKER_USER_NAME }}/sopkathon:latest

            sudo docker run --name app -d -p 8080:8080 \
            --env-file /home/ubuntu/sopkathon-dev.env \
            -e TZ=Asia/Seoul \
            ${{ secrets.DOCKER_USER_NAME }}/sopkathon:latest
            
            sudo docker image prune -a -f